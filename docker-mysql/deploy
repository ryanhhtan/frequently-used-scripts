#!/bin/bash
CONTAINER_NAME=rr_dev_mysql_server 

[[ $1 == "-f" ]] && {
    docker rm -f ${CONTAINER_NAME}
}

CONTAINER_ID=$(docker ps -q -f NAME=^/${CONTAINER_NAME}$)
[[ ! -z ${CONTAINER_ID} ]] && {
    echo "Mysql has already been running in container id: ${CONTAINER_ID}" 
    exit 0
}

CONTAINER_ID=$(docker ps -aq -f NAME=^/${CONTAINER_NAME}$)

[[ ! -z ${CONTAINER_ID} ]] && {
    docker start ${CONTAINER_NAME}
    echo "Restarted Mysql in container id: ${CONTAINER_ID}" 
    exit 0
}

docker run \
    -d \
    -p 43306:3306 \
    --name ${CONTAINER_NAME} \
    registry.gitlab.com/ryanhhtan/rr_dev_mysql_server

## NOTE ###
# After deploying the container, do the following initializing jobs:
# 1. Get the genetated root password: `docker logs mysql1 2>&1 | grep GENERATED`
# 2. Connect to the container in interactive mode with "mysql" and the genetated password: `docker exec -it mysql1 mysql -uroot -p`
# 3. Change the root password (Important!!! The genetated password will be invalid once used) `ALTER USER 'root'@'localhost' IDENTIFIED BY 'newpassword';` 
# 4. Add a new user for your application(Best practice: avoid using root account directly) `CREATE USER 'new_user_name'@'%' IDENTIFIED BY 'new_password';` 
# 5. Grant privileges to the new user, otherwise it will be denied `GRANT ALL PRIVILEGES ON *.* TO 'new_user_name'@'%';` 
# 6. Make the new privileges effective: `FLUSH PRIVILEGES;` 
