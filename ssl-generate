#!/bin/bash

# This scirpt generates self-signed ssl certificates.
# this script needs sudo priviledge to copy files to /etc/ssl/
# make sure this script is in the sudo user's search path.

# make a directory to store self-signed certificates
SELF_SIGN_ROOT_PATH=/etc/ssl/self_signed
[[ -d "${SELF_SIGN_ROOT_PATH}" ]] || mkdir "${SELF_SIGN_ROOT_PATH}" 

[[ -f "${SELF_SIGN_ROOT_PATH}/rootCa.key" ]] || {
# Generate a RSA-2048 key
openssl genrsa -des3 -out ${SELF_SIGN_ROOT_PATH}/rootCa.key
}

# read params
read -p 'Country Name (2 letter code) [CA]' COUNTRY
[[ ! -z ${COUNTRY} ]] || COUNTRY='CA'
read -p 'State or Province Name (2 letter code) [British Columbia]' STATE_OR_PROVINCE
[[ ! -z ${STATE_OR_PROVINCE} ]] || STATE_OR_PROVINCE='British Columbia'
read -p 'Locality Name (eg, city)' CITY
[[ ! -z ${CITY} ]] || CITY='Vancouver'
read -p 'Organization Name (eg, company)[my]' ORGANIZATION
[[ ! -z ${ORGANIZATION} ]] || ORGANIZATION='my'
read -p 'Organization Unit Name (eg, section)[dev]' UNIT
[[ ! -z ${UNIT} ]] || UNIT='dev'
read -p 'Common Name[devserver.myk]' NAME
[[ ! -z ${NAME} ]] || NAME='devserver.my'
read -p 'Email Address [ryanhhtan@gmail.com]' EMAIL
[[ ! -z ${EMAIL} ]] || EMAIL='ryanhhtan@gmail.com'

[[ -f "${SELF_SIGN_ROOT_PATH}/rootCa.pem" ]] || {
# Generate a Root SSL certificate with the RSA-2048 key
openssl req -x509 -new -nodes -key ${SELF_SIGN_ROOT_PATH}/rootCa.key -sha256 -days 1024 -out ${SELF_SIGN_ROOT_PATH}/rootCA.pem >/dev/null <<EOF
${COUNTRY}
${STATE_OR_PROVINCE}
${CITY}
${ORGANIZATION}
${UNIT}
${NAME}
${EMAIL}
EOF
}


